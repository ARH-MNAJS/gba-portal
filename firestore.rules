// Firestore rules for security
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Authenticated users can read public data
    match /{document=**} {
      allow read: if request.auth != null;
    }
    
    // Access control for student profiles
    match /students/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || 
                     get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
      allow delete: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Access control for admin profiles
    match /admins/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || 
                     get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Access control for college profiles
    match /colleges/{collegeId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Access control for games
    match /games/{gameId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Access control for game assignments (root collection)
    match /gameAssignments/{assignmentId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Access control for game assignments in colleges (subcollection)
    match /colleges/{collegeId}/gameAssignments/{assignmentId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Access control for game stats
    match /gameStats/{statId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Access control for assessments
    match /assessments/{assessmentId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Access control for assessment attempts
    match /assessmentAttempts/{attemptId} {
      allow read: if request.auth != null;
      // Allow students to create their own attempts, admins to read all
      allow create: if request.auth != null && 
                     request.resource.data.studentId == request.auth.uid;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
